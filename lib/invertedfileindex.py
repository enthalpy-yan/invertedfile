import numpy as np
import math

def get_matrix(txt,k):
    f = open(txt,'r')
    l = sum(1 for line in f)
    
    nparr = np.zeros((l,k))
    f = open(txt,'r')
    j = 0
    for line in f:
        print "line: ",j+1
        for p in line.split(" ")[2:-1]:
            k,v = int(p.split(":")[0]),float(p.split(":")[1])
            nparr[j][k-1] = 1
        j += 1
    return l,nparr

def get_rank(arr,test,l):
    
    idi = np.zeros((1,l))
    for i in [int(i.split(":")[0]) for i in test.split(" ")]:
        idi = np.add(idi,arr[i-1])
    return [(i,j) for (i,j) in zip([i for i in range(l)],idi.tolist()[0])]
    
def inv_file_index(input,output,test,k):
    
    img_num, nd = get_matrix(input,k)
    np.savetxt('./array.txt', nd)
    rank = get_rank(nd.T,test,img_num)   
    sorted_rank = sorted((r for r in rank if not math.isnan(r[1])), key=lambda r: r[1])
    return sorted_rank 
    
    
if __name__ == "__main__":
    k = 400
    inputtxt = "/Users/minhuigu/Desktop/new.txt"
    outputtxt = "/Users/minhuigu/Desktop/matrix.txt"
    testimg = "1:0.000931966 2:0.00652377 3:0.000931966 4:0.00186393 6:0.0083877 7:0.00465983 8:0.0027959 9:0.000931966 11:0.00745573 12:0.0055918 13:0.0102516 14:0.00186393 15:0.000931966 16:0.00186393 17:0.000931966 19:0.00372787 20:0.00372787 22:0.00186393 23:0.0055918 24:0.0205033 25:0.0083877 28:0.0130475 29:0.0027959 30:0.000931966 31:0.000931966 33:0.00465983 34:0.00186393 37:0.00372787 38:0.0027959 39:0.00186393 40:0.00186393 41:0.000931966 42:0.0260951 44:0.0083877 45:0.000931966 46:0.0027959 47:0.0027959 48:0.000931966 49:0.000931966 51:0.00745573 52:0.00186393 53:0.0055918 54:0.00745573 55:0.000931966 56:0.00186393 57:0.000931966 58:0.000931966 60:0.000931966 61:0.00465983 62:0.0111836 64:0.0027959 65:0.000931966 66:0.000931966 67:0.0027959 70:0.00186393 71:0.000931966 73:0.0027959 74:0.00186393 75:0.00372787 76:0.00186393 78:0.00372787 79:0.0111836 81:0.00186393 82:0.000931966 83:0.0055918 84:0.00186393 85:0.00465983 86:0.000931966 87:0.000931966 88:0.00465983 89:0.000931966 90:0.000931966 91:0.0027959 92:0.00372787 93:0.00186393 96:0.00186393 97:0.0027959 98:0.0027959 99:0.0055918 100:0.0055918 101:0.000931966 103:0.00186393 104:0.0130475 105:0.0027959 106:0.000931966 107:0.00186393 108:0.0055918 110:0.000931966 112:0.000931966 113:0.00186393 114:0.000931966 115:0.00372787 116:0.00186393 117:0.0027959 118:0.0055918 120:0.0139795 121:0.000931966 122:0.00465983 123:0.00186393 124:0.0121156 125:0.0027959 126:0.00186393 127:0.000931966 128:0.00931966 129:0.00186393 130:0.0027959 132:0.00186393 134:0.00186393 137:0.00186393 139:0.000931966 140:0.0083877 141:0.000931966 142:0.00186393 144:0.0027959 145:0.00465983 147:0.0027959 148:0.00186393 149:0.000931966 151:0.0205033 155:0.00372787 156:0.000931966 157:0.00652377 158:0.00186393 159:0.000931966 160:0.0167754 162:0.00372787 163:0.00186393 164:0.000931966 165:0.000931966 166:0.00186393 167:0.0027959 169:0.00186393 170:0.00186393 171:0.0083877 172:0.0027959 173:0.00186393 174:0.00186393 175:0.00186393 176:0.000931966 178:0.000931966 180:0.00186393 181:0.0027959 183:0.000931966 184:0.000931966 185:0.000931966 186:0.00465983 187:0.000931966 188:0.00186393 189:0.00372787 190:0.000931966 191:0.00652377 192:0.00931966 193:0.000931966 195:0.00465983 196:0.00186393 197:0.0111836 198:0.000931966 201:0.0055918 205:0.00186393 207:0.0130475 209:0.000931966 211:0.0027959 212:0.0027959 213:0.000931966 214:0.00372787 216:0.00186393 217:0.000931966 219:0.000931966 220:0.00186393 221:0.000931966 222:0.00186393 223:0.00372787 224:0.000931966 225:0.000931966 227:0.00186393 228:0.000931966 229:0.000931966 231:0.00186393 232:0.00931966 233:0.00186393 235:0.000931966 236:0.0027959 237:0.000931966 238:0.000931966 239:0.00186393 240:0.00372787 241:0.0027959 242:0.000931966 243:0.0055918 244:0.00465983 247:0.00186393 248:0.00372787 250:0.0307549 251:0.000931966 252:0.000931966 253:0.0121156 254:0.00186393 255:0.00186393 257:0.000931966 258:0.000931966 260:0.000931966 262:0.00465983 263:0.000931966 264:0.00186393 265:0.00186393 266:0.000931966 267:0.00186393 268:0.000931966 270:0.0027959 271:0.000931966 272:0.000931966 273:0.00186393 275:0.00372787 279:0.00186393 280:0.000931966 281:0.000931966 282:0.0102516 284:0.0121156 285:0.000931966 286:0.00186393 287:0.00186393 288:0.0027959 290:0.000931966 291:0.000931966 293:0.00465983 294:0.000931966 295:0.000931966 297:0.000931966 298:0.000931966 299:0.00186393 300:0.00186393 301:0.000931966 305:0.0083877 306:0.0055918 308:0.00652377 310:0.00372787 311:0.00186393 312:0.000931966 313:0.000931966 315:0.00372787 316:0.00186393 319:0.00372787 320:0.00186393 322:0.00372787 324:0.00372787 325:0.00186393 326:0.0083877 328:0.000931966 330:0.00186393 332:0.000931966 333:0.000931966 335:0.00186393 336:0.0139795 337:0.0027959 340:0.00745573 341:0.00186393 342:0.00186393 343:0.000931966 345:0.0027959 346:0.00465983 347:0.000931966 348:0.0195713 349:0.00372787 350:0.000931966 353:0.00465983 354:0.0027959 355:0.000931966 356:0.00186393 357:0.000931966 358:0.000931966 360:0.00372787 361:0.00186393 363:0.0111836 364:0.000931966 366:0.00186393 367:0.00186393 368:0.00186393 369:0.000931966 371:0.000931966 372:0.00186393 373:0.0027959 374:0.00652377 375:0.000931966 376:0.00186393 377:0.00186393 378:0.000931966 379:0.00186393 380:0.000931966 382:0.000931966 384:0.000931966 385:0.00186393 386:0.0027959 388:0.00372787 389:0.000931966"
    print inv_file_index(inputtxt,outputtxt,testimg,k)[-10:]
    